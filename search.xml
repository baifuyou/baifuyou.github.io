<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[最长递增路径-LeetCode]]></title>
      <url>http://www.scratbai.com/2016/07/09/%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E8%B7%AF%E5%BE%84-LeetCode/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个 M × N 的矩阵，找出其中最长的递增序列的长度<br>递增序列的方向可以是当前元素的上下左右，但不能是对角线，也不可以跨越边界</p>
<h3 id="Example1"><a href="#Example1" class="headerlink" title="Example1"></a>Example1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">nums = [</div><div class="line">  [<span class="number">9</span>,<span class="number">9</span>,<span class="number">4</span>],</div><div class="line">  [<span class="number">6</span>,<span class="number">6</span>,<span class="number">8</span>],</div><div class="line">  [<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>]</div><div class="line">]</div></pre></td></tr></table></figure>
<p>返回值是4，最长的递增序列是：1，2，6，9</p>
<h3 id="Example2"><a href="#Example2" class="headerlink" title="Example2"></a>Example2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">nums = [</div><div class="line">  [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],</div><div class="line">  [<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>],</div><div class="line">  [<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]</div><div class="line">]</div></pre></td></tr></table></figure>
<p>返回值是4，最长的递增序列是：2，4，5，6 或者 3，4，5，6</p>
<p>题目来源： <a href="https://leetcode.com/problems/longest-increasing-path-in-a-matrix/" target="_blank" rel="external">Longest Increasing Path in a Matrix</a></p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>方法很直观，依次计算每一个元素的最长递增路径长（下面简称LI），然后选取最大的值作为最终结果。</p>
<p>然后要考虑的是，如何计算每一个元素的LI。很容易想到，每个元素有2-4个相邻元素，要计算当前元素的LI，<br>先要找出值比当前元素大的相邻元素，并计算每个相邻元素的LI，然后找出最大的相邻元素LI，加上1就是当前元素的LI。如果所有相邻元素的值都比当前元素大，则当前元素的LI为。</p>
<p>上述就是一个递归过程，递归结束点就是值小于等于所有相邻元素的元素。</p>
<p>按照以上思路实现应该就可以输出正确答案了，但是未必能被Accepted（猜的，我没试过）。因为上述算法虽然能输出正确结果，但是每个元素都可能计算多次LI。所以，我们还应该对每个元素的LI进行缓存，确保每个元素只计算一次。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestIncreasingPath</span><span class="params">(self, matrix)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :type matrix: List[List[int]]</div><div class="line">        :rtype: int</div><div class="line">        """</div><div class="line">        <span class="comment">#参数检查</span></div><div class="line">        <span class="keyword">if</span> matrix <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        matrixSize = len(matrix)</div><div class="line">        <span class="keyword">if</span> len(matrix) == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line"></div><div class="line">        <span class="comment">#初始化存放increasingPaths的数组</span></div><div class="line">        increasingPaths = [[<span class="number">0</span> <span class="keyword">for</span> j <span class="keyword">in</span> range(len(matrix[i]))] <span class="keyword">for</span> i <span class="keyword">in</span> range(matrixSize)]</div><div class="line"></div><div class="line">        <span class="comment">#对每一个元素计算increasingPath</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, matrixSize):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(matrix[i])):</div><div class="line">                self.calculateIncreasingPath(matrix, i, j, increasingPaths)</div><div class="line"></div><div class="line">        <span class="comment">#选出最大的increasingPath并返回</span></div><div class="line">        <span class="keyword">return</span> max([max(x) <span class="keyword">for</span> x <span class="keyword">in</span> increasingPaths])</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">calculateIncreasingPath</span><span class="params">(self, matrix, i, j, increasingPaths)</span>:</span></div><div class="line">        <span class="comment">#如果已经计算过，则直接返回缓存的值</span></div><div class="line">        <span class="keyword">if</span> increasingPaths[i][j] != <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> increasingPaths[i][j]</div><div class="line"></div><div class="line">        nodeValue = matrix[i][j]</div><div class="line"></div><div class="line">        <span class="comment">#计算上方相邻元素</span></div><div class="line">        upPathLen = <span class="number">0</span></div><div class="line">        <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[i - <span class="number">1</span>][j] &gt; nodeValue:</div><div class="line">            upPathLen = self.calculateIncreasingPath(matrix, i - <span class="number">1</span>, j, increasingPaths)</div><div class="line"></div><div class="line">        <span class="comment">#计算左边相邻元素</span></div><div class="line">        leftPathLen = <span class="number">0</span></div><div class="line">        <span class="keyword">if</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[i][j - <span class="number">1</span>] &gt; nodeValue:</div><div class="line">            leftPathLen = self.calculateIncreasingPath(matrix, i, j - <span class="number">1</span>, increasingPaths)</div><div class="line"></div><div class="line">        <span class="comment">#计算下面相邻元素</span></div><div class="line">        downPathLen = <span class="number">0</span></div><div class="line">        <span class="keyword">if</span> i &lt; len(matrix) - <span class="number">1</span> <span class="keyword">and</span> matrix[i + <span class="number">1</span>][j] &gt; nodeValue:</div><div class="line">            downPathLen = self.calculateIncreasingPath(matrix, i + <span class="number">1</span>, j, increasingPaths)</div><div class="line"></div><div class="line">        <span class="comment">#计算右边相邻元素</span></div><div class="line">        rightPathLen = <span class="number">0</span></div><div class="line">        <span class="keyword">if</span> j &lt; len(matrix[i]) <span class="number">-1</span> <span class="keyword">and</span> matrix[i][j + <span class="number">1</span>] &gt; nodeValue:</div><div class="line">            rightPathLen = self.calculateIncreasingPath(matrix, i, j + <span class="number">1</span>, increasingPaths)</div><div class="line"></div><div class="line">        <span class="comment">#找出相邻元素中最大的increasingPath，加上1作为当前元素的increasingPath</span></div><div class="line">        increasingPath = max([upPathLen, leftPathLen, downPathLen, rightPathLen]) + <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="comment">#缓存计算结果</span></div><div class="line">        increasingPaths[i][j] = increasingPath</div><div class="line"></div><div class="line">        <span class="keyword">return</span> increasingPath</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://www.scratbai.com/2016/07/04/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
